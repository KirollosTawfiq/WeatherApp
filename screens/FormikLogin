import {
  Image,
  KeyboardAvoidingView,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
  Platform,
  Switch,
} from "react-native";
import React, { useState } from "react";
import Icon from "react-native-vector-icons/FontAwesome";
import { LinearGradient } from "expo-linear-gradient";
import { useNavigation } from "@react-navigation/native";
import { Formik } from "formik";
import * as Yup from "yup";

const LoginSchema = Yup.object().shape({
  username: Yup.string().required("Username is required"),
  password: Yup.string()
    .required("Password is required")
    .min(5, "Minimum 5 characters"),
});

const LoginScreen = () => {
  const [showPassword, setShowPassword] = useState(false);
  const navigation = useNavigation();

  const handleRegister = () => {
    navigation.navigate("Signup");
  };

  return (
    <KeyboardAvoidingView
      behavior="padding"
      keyboardVerticalOffset={Platform.OS === "ios" ? 100 : 0}
      style={styles.container}
    >
      <View style={styles.topImageContainer}>
        <Image
          source={require("../assets/topVector.png")}
          style={styles.topImage}
        />
      </View>

      <View style={styles.helloContainer}>
        <Text style={styles.helloText}>Hello</Text>
      </View>

      <View alignItems="center">
        <Text style={styles.signText}>Login in to your account</Text>
      </View>

      <Formik
        initialValues={{ username: "", password: "" }}
        validationSchema={LoginSchema}
        onSubmit={(values, { resetForm }) => {
          navigation.navigate("Weather");
          resetForm();
          setShowPassword(false);
        }}
      >
        {({
          handleChange,
          handleBlur,
          handleSubmit,
          values,
          errors,
          touched,
        }) => (
          <>
            {/* Username Input */}
            <View style={styles.inputContainer}>
              <Icon
                name="user"
                size={24}
                color="#9A9A9A"
                style={styles.inputIcon}
              />
              <TextInput
                style={styles.textInput}
                placeholder="Username"
                onChangeText={handleChange("username")}
                onBlur={handleBlur("username")}
                value={values.username}
              />
            </View>
            {touched.username && errors.username && (
              <Text style={styles.errorText}>{errors.username}</Text>
            )}

            {/* Password Input */}
            <View style={styles.inputContainer}>
              <Icon
                name="lock"
                size={24}
                color="#9A9A9A"
                style={styles.inputIcon}
              />
              <TextInput
                style={styles.textInput}
                placeholder="Password"
                secureTextEntry={!showPassword}
                onChangeText={handleChange("password")}
                onBlur={handleBlur("password")}
                value={values.password}
              />
            </View>
            {touched.password && errors.password && (
              <Text style={styles.errorText}>{errors.password}</Text>
            )}

            {/* Show Password Toggle */}
            <View style={styles.showPasswordContainer}>
              <Switch
                value={showPassword}
                onValueChange={setShowPassword}
                thumbColor={showPassword ? "#623AA2" : "#f4f3f4"}
                trackColor={{ false: "#767577", true: "#a384ff" }}
                style={{ transform: [{ scale: 0.7 }] }}
              />
              <Text style={styles.showPasswordText}>Show Password</Text>
            </View>

            <Text style={styles.forgotPasswordText}>Forgot your password</Text>

            <View style={styles.signInButtonContainer}>
              <Text style={styles.signInText}>Sign in</Text>

              <TouchableOpacity onPress={handleSubmit}>
                <LinearGradient
                  colors={["#F97794", "#623AA2"]}
                  style={styles.linearGradient}
                >
                  <Icon name="arrow-right" size={24} color="#FFFFFF" />
                </LinearGradient>
              </TouchableOpacity>
            </View>
          </>
        )}
      </Formik>

      <Text style={styles.footerText}>
        Don't have an account?{" "}
        <TouchableOpacity onPress={handleRegister}>
          <Text
            style={{
              textDecorationLine: "underline",
              color: "blue",
              marginBottom: -3,
            }}
          >
            Create
          </Text>
        </TouchableOpacity>
      </Text>

      <View style={styles.leftVectorContainer}>
        <Image
          source={require("../assets/leftVector.png")}
          style={styles.leftVectorImage}
        />
      </View>
    </KeyboardAvoidingView>
  );
};

export default LoginScreen;
